# === DOKUMENTATION === #

# Tomma rader och rader som börjar med # IGNORERAS.
# Felaktiga rader ignoreras också (detta bör inte utnyttjas, punks)

# Rader som INTE är ett KOMMANDO (se nedan) tolkas som IMPORT.
#   * Raderna ska bestå av modulnamn separerade med ett , och ev. whitespace
#   * Moduler som inte finns kommer inte att importeras (eller krascha botten)
# OBS !! urllib.parse, urllib.error mfl ska inte importeras separat, utan
#     bara importeras som urllib. Troligtvis gäller detta för andra liknande.

# Rader som innehåller ' -> ' tolkas som KOMMANDON.
#   (mängden whitespace runt -> är irrelevant)
# Båda sidor parsas först med .format():
#   * {myname} = bottens namn
#   * {sender} = avsändarens nick, inte ident/hostname
#   * {channel} {message} är ganska självklara
#   * behövs {} måste dom skrivas dubbelt: {{}}
# Vänster sida:
#   * tolkas som REGEX
#   * {arg} byts ut mot (.+?)
#   * {c} byts ut mot command_prefix i config
# Höger sida:
#   * bara string formatting
#   * {arg} står för vad {arg} innehöll på höger sida
#   * {qarg} innebär quote(arg), bra för urler
#   > kan exekvera riktig pythonkod om texten börjar med #py:
#       * allt efter '#py:' körs i eval()
#       * alla moduler som importerats i DEN HÄR FILEN kan användas
#       * argument ({arg} etc) skrivs utan {} runt om


# === IMPORTS === #
calendar, datetime, random, urllib


# === MEMES === #
{c}tidigt           -> <calle> {sender} går alltid och lägger sig tidigt
{c}tidigt {arg}     -> <calle> {arg} går alltid och lägger sig tidigt
{c}tidigt/me {arg}  -> * {arg} går alltid och lägger sig tidigt
{c}nej              -> <jocke-l> jag har alltid och nej, det har jag inte.[\n]<jocke-l> ALLITD
{c}allitd {arg}     -> <jocke-l> jag har alltid och {arg}[\n]<jocke-l> ALLITD
ALLITD              -> ALLITD
{c}rullar {arg}     -> {arg} rullar in som det ska[\n]det går bra nu
{c}wannab           -> luktar wanna b amerikan
{c}murk( hyad)?     -> ☻
{c}lose             -> The Game.
{c}lök              -> <Goebbels> Nu ska jag handla LÖK.
{c}lök {arg}        -> <Goebbels> Nu ska {arg} handla LÖK.
(^|.*?\W)LÖ+K(\W.*?|$) -> #py: 'L' + 'Ö'*random.randint(2,8) + 'K'
{c}mr_basic         -> <kobran> abobaloba baloba[\n]<kobran> he'sa mr_basic[\n]<kobran> mr fantastic
{c}yo               -> * Pranz joined the channel[\n]<Pranz> Yo[\n]<calle> micraft server[\n]<Pranz> Vad ligger den på?[\n][lång tystnad]

# === SMÅPLOCK === #
echo {arg}          -> {arg}
{myname}!           -> wuh?
{c}title            -> nej
{c}ping             -> pong

# === KOMMANDON === # 
{c}choose {arg}     -> #py: random.choice(arg.split('|')).strip()
{c}tyda {arg}       -> {sender}: http://tyda.se/search/{qarg}
{c}hitta {arg}      -> {sender}: www.hitta.se/LargeMap.aspx?var={qarg}
{c}vecka            -> #py: '{0}: Vecka {1}'.format(sender, datetime.date.today().isocalendar()[1])
{c}jdn              -> #py: '{0}: Nuvarande julian day: {1:.5f}'.format(sender, calendar.timegm(datetime.datetime.utcnow().utctimetuple())/86400.0 + 2440587.5)
{c}list commands    -> {sender}: https://github.com/kqr/memery/blob/master/commands
{c}list plugins     -> {sender}: https://github.com/kqr/memery/tree/master/plugins


# === HJÄLPTEXTER === #
{c}choose ?> <arg1> | <arg2> | … ?> Svarar med ett av slumpen valt argument.
echo      ?> <text>              ?> Låt {myname} skriva ut texten.
{c}title  ?>                     ?> nej
{c}list   ?> <commands|plugins>  ?> Returnera länken till relevant Github-sida.
